version: 2.1

jobs:
  test:
    working_directory: /app
    docker:
      - image: philophilo/circleci-fire
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
        environment:
          DATABASE_USER: $DATABASE_USER
          DATABASE_PASSWORD: $DATABASE_PASSWORD
          DATABASE_NAME: $DATABASE_NAME
          DATABASE_PORT: $DATABASE_PORT
          SECRET_KEY: $SECRET_KEY
          EMAIL_HOST: $EMAIL_HOST
          EMAIL_PORT: $EMAIL_PORT
          EMAIL_HOST_USER: $EMAIL_HOST_USER
          EMAIL_HOST_PASSWORD: $EMAIL_HOST_PASSWORD
      - image: circleci/postgres:9.6.5-alpine-ram
        environment:
          POSTGRES_USER: $DATABASE_USER
          POSTGRES_DB: $DATABASE_NAME
          POSTGRES_PASSWORD: $DATABASE_PASSWORD

    steps:
      - checkout
      - run:
          command: |
            pip install -r requirements.txt
            cd api/
            python manage.py test
  deploy:
    working_directory: /app
    docker:
      - image: philophilo/circleci-fire
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD

    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: |
            VERSION=$(echo $CIRCLE_SHA1 | cut -c -7)
            NEW_IMAGE=philophilo/test:$VERSION
            docker build -f docker/Dockerfile-prod -t $NEW_IMAGE .
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            docker push $NEW_IMAGE
            curl -X DELETE https://circleci.com/api/v1.1/project/gh/philophilo/fire_k8s/envvar/BACKEND_IMAGE -H "Circle-Token: $CIRCLECI_TOKEN"
            curl -X POST --header "Content-Type: application/json" -d '{"name":"BACKEND_IMAGE", "value":'$NEW_IMAGE'}' https://circleci.com/api/v1.1/project/gh/philophilo/fire_k8s/envvar -H "Circle-Token: $CIRCLECI_TOKEN"
            curl -u $CIRCLECI_TOKEN: -X POST https://circleci.com/api/v2/project/gh/philophilo/fire_k8s/pipeline

workflows:
  test-and-deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - master